const path = require('path');
const fs = require('fs');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');

const plugins = [
    new webpack.NoEmitOnErrorsPlugin(),
    new HtmlWebpackPlugin({
        inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
        templateContent: templateContent(),
    }),
    new webpack.DefinePlugin({
        'DEBUG': true,
    })
];

module.exports = require('./webpack.shared.config')({
    mode: 'development',
    output: {
        filename: '[name].js',
        chunkFilename: '[name].chunk.js',
    },

    resolve: {
        modules: ['app', 'client', 'node_modules'],
        alias: {
            'client': path.join(process.cwd(), 'client')
        }
    },

    plugins: plugins,

    devServer: {
        contentBase: path.resolve(process.cwd(), 'dist'),
        compress: true,
        port: 9090,
        inline: true,
        historyApiFallback: true,
        contentBase: "./static",
        watchOptions: {
            aggregateTimeout: 300,
            poll: true,
            ignored: "/node_modules/"
        },
        proxy: {
            '/api': {
                target: 'http://localhost:5000',
                secure: false
            }
        }
    },

    devtool: 'source-map'
});

function templateContent() {
    return fs.readFileSync(
        path.resolve(process.cwd(), 'client/index.html')
    ).toString();
}
